{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb630600.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick }) => {\n    \n    return (\n        <button onClick={onClick} style={{ backgroundColor: color }} \n            className='btn'>{text}\n        </button>\n\n        )\n\n    }\nButton.defaultProps = {\n    color: 'red',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className = 'header'>\n            <h1>{title}</h1>\n            <Button \n                color={showAdd ? 'red':'green'} \n                text={showAdd ? 'Close':'Add'}\n                onClick={onAdd} \n            />\n        </header>\n    )\n}\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header ","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} \n                <FaTimes style={{ color: 'red', cursor: 'pointer' }} \n                onClick={() => onDelete(task.id) } \n                />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\n\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        \n        <>\n            {tasks.map((task) => (\n            <Task \n                key={task.id} \n                task={task} \n                onDelete = {onDelete} \n                onToggle = {onToggle}\n            />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks","import { useState } from 'react'\n\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert('Please add a task')\n            return \n        }\n\n        onAdd({ text, day, reminder })\n    }\n\n    return (\n        <form className = 'add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type = 'text' \n                placeholder='Add Task' \n                value={text} \n                onChange={(e) => setText(e.target.value)}  />\n            </div>\n\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type = 'text' \n                placeholder='Add Day and Time' \n                value={day}\n                onChange={(e) => setDay(e.target.value)}\n                \n                />\n            </div>\n\n            <div className='form-control form-control-check' >\n                <label>Set Reminder</label>\n                <input type = 'checkbox' \n                checked={reminder}\n                value={reminder} \n                onChange={(e) => setReminder(e.currentTarget.checked) } \n                />\n            </div>\n\n            <input type='submit' \n            value='Save Task' \n            className= 'btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n  const App = () => {\n    const [showAddTask, setShowAddTask] = useState(false)\n    const [tasks, setTasks] = useState(\n      [\n          {\n              id: 1,\n              text: 'Doctors Appointment',\n              day: 'Feb 5th at 2:30pm',\n              reminder: true,\n          },\n          {\n              id: 2,\n              text: 'Meeting at School',\n              day: 'Feb 6th at 1:30pm',\n              reminder: true,\n          },\n          {\n              id: 3,\n              text: 'Food Shopping',\n              day: 'Feb 5th at 2:30pm',\n              reminder: false,\n          }\n      ]\n  )\n\n  // add task\n      const addTask = (task) => {\n        const id = Math.floor(Math.random() * 10000) + 1\n        const newTask = { id, ...task }\n        setTasks([...tasks, newTask])\n      }\n\n  // delete Task\n      const deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id)) \n      }\n\n  // toggle reminder\n      const toggleReminder = (id) => {\n        setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task)) \n      }\n\n\n    return (\n      <div className = 'container'>\n       <Header \n          onAdd={() => setShowAddTask(!showAddTask)} \n          showAdd={showAddTask}\n       />\n\n       {showAddTask && <AddTask onAdd = {addTask}  />}\n       {tasks.length > 0 ? <Tasks tasks={tasks} onDelete= {deleteTask} onToggle= {toggleReminder}/> : 'No Tasks To Show' }\n       </div>\n      )\n  }\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}